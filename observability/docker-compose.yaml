version: '3.8'
services:
  # Loki for logs
  loki:
    image: grafana/loki:latest
    ports:
      - '3100:3100'
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - .:/tmp/loki/chunks

  # Tempo for traces
  tempo:
    image: grafana/tempo:latest
    ports:
      - '3200:3200' # Tempo UI
    expose:
      - '4318'
      - '4317'

    command: -config.file=/etc/tempo/tempo-local.yaml
    volumes:
      - ./tempo-config.yaml:/etc/tempo/tempo-local.yaml
      - ./volume/tempo-wal:/tmp/tempo/wal
      - ./volume/tempo-blocks:/tmp/tempo/blocks
      - ./volume/tempo-metrics-generator:/tmp/tempo/metrics-generator

  # Mimir for metrics
  mimir:
    deploy:
      replicas: 1
    image: grafana/mimir:latest
    ports:
      - '9009:9009' # Remote-write endpoint
    command: -config.file=/etc/mimir/mimir.yaml
    volumes:
      - ./mimir-config.yaml:/etc/mimir/mimir.yaml

  minio:
    image: quay.io/minio/minio:RELEASE.2025-03-12T18-04-18Z
    container_name: minio
    ports:
      - '9000:9000'
      - '9002:9001'
    environment:
      MINIO_ROOT_USER: mimir
      MINIO_ROOT_PASSWORD: supersecret
    command: server --console-address :9001 /data
    volumes:
      - ./volume/minio-data:/data

  createbuckets:
    image: quay.io/minio/mc:RELEASE.2025-03-12T17-29-24Z
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
        sleep 5;
        /usr/bin/mc alias set myminio http://minio:9000 minioAccessKey minioSecretKey;
        /usr/bin/mc mb mimir-blocks;
        /usr/bin/mc mb mimir-ruler;
        exit 0;
      "
    restart: on-failure

  # Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    ports:
      - '3000:3000'
    environment:
      GF_AUTH_ANONYMOUS_ENABLED: 'true'
    volumes:
      - ./grafana-datasource.yaml:/etc/grafana/provisioning/datasources/datasources.yaml

  # Grafana Alloy (OTel distributor)
  alloy:
    image: grafana/alloy:latest
    ports:
      - '12345:12345'
      - '4317:4317' # OTLP gRPC
      - '4318:4318' # OTLP HTTP
    command: >
      run --server.http.listen-addr=0.0.0.0:12345 
      --storage.path=/var/lib/alloy/data 
      /etc/alloy/config.alloy
    volumes:
      - ./alloy-config.alloy:/etc/alloy/config.alloy
  docker-monitor:
    image: portainer/portainer:latest
    restart: always
    ports:
      - 9001:9000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./volume/portainer-data:/data
